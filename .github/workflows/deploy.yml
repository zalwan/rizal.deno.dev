name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      # Cache node_modules to speed up npm install
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache .next to speed up rebuilds
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-next-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-next-

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install step
        run: "npm install"

      - name: Build step
        run: "npm run build && (cp -r public .next/standalone/public; cp -r .next/static .next/standalone/.next/static; mv .next/standalone/server.js .next/standalone/server.cjs)"

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "rizal"
          entrypoint: "./server.cjs"
          root: ".next/standalone"
